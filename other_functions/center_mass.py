#!/usr/bin/env python
"""
Gutierrez, B.  Contains a function for finding the center of mass of 
fMRI image components from meica.py.
"""

import numpy as np
import nibabel as ni
import scipy.ndimage



"""
The first used in meica.py
as the anatomical is a 3D array from a NIFTI file, the second from the selection of output files from meica (i.e medn, mefc, mefl, tsoc)
the last is also generated by meica.py and is contained in the TED directory containing zscores for the voxels.
is a 4d array.  Returns the data from the two argument datasets, the header of the two argument datasets,
an array called component (which contains the center of mass for each component) and a threshold map.
"""
def center_of_mass(overlay):
	overlay = ni.load(overlay)
	overlay_data = overlay.get_data()
	component = np.empty(shape = (overlay_data.shape[3],4))
	for i in range(overlay_data.shape[3]):
		component[i,0] = i
		component[i,1:4] = np.asarray(scipy.ndimage.measurements.center_of_mass(abs(overlay_data[:,:,:,i])))
	return(component)

